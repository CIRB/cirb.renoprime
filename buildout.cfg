[buildout]
extends =
    http://svn.plone.org/svn/collective/buildout/plonetest/test-4.x.cfg

extensions =
    mr.developer

# auto-checkout = collective.geo.openlayers

package-name = cirb.renoprime
package-extras = [test]

parts += 
    omelette
    products-translation
    nginx
    proxy

eggs = Pillow

[instance]
environment-vars +=
    DEPLOY_ENV dev

[test]
defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']

[products-translation]
recipe = infrae.i18nextract
packages = cirb.renoprime
output = ${buildout:directory}/src/cirb/renoprime/locales
output-package = cirb.renoprime
domain = cirb.renoprime

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

# [sources]
# collective.geo.openlayers = git git@github.com:collective/collective.geo.openlayers.git

[nginx]
#nginx needs "sudo apt-get install libpcre3 libpcre3-dev"
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.1.14.tar.gz
md5sum = 16d523e395778ef35b49a2fa6ad18af0

[proxy]
recipe = gocept.nginx
hostname = localhost
port = 8000
configuration =
    worker_processes 1;
    events {
        worker_connections 1024;
    }
    http {
        upstream novac-local {
            server localhost:8080;
        }
        server {
            listen 8000;
            server_name renoprime;

            location /proxy/ {
                rewrite ^/proxy/(.*) /$1 break;
                proxy_pass http://www.mybrugis.irisnet.be;
                proxy_redirect default;
            }

            location / {
                rewrite ^/(.*)$ /VirtualHostBase/$scheme/$host:$server_port/Plone/VirtualHostRoot/$1 break;
                proxy_pass http://localhost:8080/Plone;
                proxy_set_header Host $http_host;
                proxy_redirect default;
            }
        }

    }

